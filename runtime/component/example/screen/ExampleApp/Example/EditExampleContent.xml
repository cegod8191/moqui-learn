<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-1.2.xsd"
        default-menu-title="Content" default-menu-index="3">
    
    <parameter name="exampleId"/>

    <transition name="createExampleContent">
        <service-call name="create#ExampleContent"/>
        <default-response url="."/>
    </transition>
    <transition name="updateExampleContent">
        <service-call name="update#ExampleContent"/>
        <default-response url="."/>
    </transition>
    <transition name="deleteExampleContent">
        <service-call name="delete#ExampleContent"/>
        <default-response url="."/>
    </transition>
    <transition name="uploadExampleContent">
        <actions><script><![CDATA[
            org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(this.class)
            org.moqui.context.ExecutionContext ec = context.ec
            org.apache.commons.fileupload.FileItem contentFile = context.contentFile
            String fileName = contentFile.getName()

            logger.info("Uploading file [${fileName}] for Example [${exampleId}] in repository [${repositoryName}] with purpose [${purposeEnumId}] and locale [${locale}]")

            javax.jcr.Session session = ec.resource.getContentRepositorySession(repositoryName)
            javax.jcr.Node rootNode = session.getRootNode()

            javax.jcr.Node moquiNode = rootNode.hasNode("moqui") ? rootNode.getNode("moqui") : rootNode.addNode("moqui", "nt:folder")
            javax.jcr.Node exampleNode = moquiNode.hasNode("example") ? moquiNode.getNode("example") : moquiNode.addNode("example", "nt:folder")
            javax.jcr.Node folderNode = exampleNode.hasNode(exampleId) ? exampleNode.getNode(exampleId) : exampleNode.addNode(exampleId, "nt:folder")

            javax.jcr.Node fileNode = folderNode.addNode(fileName, "nt:file")
            javax.jcr.Node fileContent = fileNode.addNode("jcr:content", "nt:resource")
            fileContent.setProperty("jcr:mimeType", contentFile.contentType)
            // fileContent.setProperty("jcr:encoding", ?)
            Calendar lastModified = Calendar.getInstance(); lastModified.setTimeInMillis(System.currentTimeMillis())
            fileContent.setProperty("jcr:lastModified", lastModified)

            InputStream fileStream = contentFile.getInputStream()
            fileContent.setProperty("jcr:data", session.valueFactory.createBinary(fileStream))
            fileStream.close()

            session.save()

            String contentLocation = "content://${repositoryName}/moqui/example/${exampleId}/${fileName}"
            ec.service.sync().name("create", "ExampleContent").parameters([exampleId:exampleId,
                    contentLocation:contentLocation, purposeEnumId:purposeEnumId, locale:locale]).call()
        ]]></script></actions>
        <default-response url="."/>
    </transition>
    <transition name="downloadContent">
        <actions>
            <entity-find-one entity-name="ExampleContent" value-field="exampleContent"/>
            <script><![CDATA[
                import org.moqui.context.ResourceReference

                org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(this.class)
                org.moqui.context.ExecutionContext ec = context.ec

                ResourceReference rr = ec.resource.getLocationReference(exampleContent.contentLocation)
                ec.web.response.setContentType(rr.contentType)
                InputStream is = rr.openStream()
                OutputStream os = ec.web.response.outputStream
                int totalLen = StupidUtilities.copyStream(is, os)
                is.close()
                os.close()

                logger.info("Streamed ${totalLen} bytes from contentLocation ${exampleContent.contentLocation}")
                ]]></script>
        </actions>
        <default-response type="none"/>
    </transition>

    <actions>
        <entity-find entity-name="ExampleContent" list="exampleContentList">
            <econdition field-name="exampleId" from="exampleId"/>
            <order-by field-name="contentLocation"/>
        </entity-find>
    </actions>
    <widgets>
        <container>
            <container-dialog id="AddContentDialog" button-text="Add Content">
                <form-single name="AddExampleContent" transition="createExampleContent">
                    <auto-fields-service service-name="create#ExampleContent"/>
                    <field name="exampleId"><default-field><hidden/></default-field></field>
                    <field name="contentLocation"><default-field><text-line size="60"/></default-field></field>
                    <field name="purposeEnumId"><default-field title="Purpose">
                        <drop-down><entity-options><entity-find entity-name="moqui.basic.Enumeration">
                            <econdition field-name="enumTypeId" value="ExampleContentPurpose"/>
                            <order-by field-name="description"/>
                        </entity-find></entity-options></drop-down>
                    </default-field></field>
                    <field name="locale"><default-field><text-line size="6"/></default-field></field>
                    <field name="submitButton"><default-field title="Add"><submit confirmation="Really Add?"/></default-field></field>
                </form-single>
            </container-dialog>
            <container-dialog id="UploadContentDialog" button-text="Upload Content">
                <form-single name="UploadExampleContent" transition="uploadExampleContent">
                    <auto-fields-service service-name="create#ExampleContent"/>
                    <field name="exampleId"><default-field><hidden/></default-field></field>
                    <field name="contentFile"><default-field><file/></default-field></field>
                    <field name="repositoryName"><default-field><text-line size="20" default-value="main"/></default-field></field>
                    <field name="purposeEnumId"><default-field title="Purpose">
                        <drop-down><entity-options><entity-find entity-name="moqui.basic.Enumeration">
                            <econdition field-name="enumTypeId" value="ExampleContentPurpose"/>
                            <order-by field-name="description"/>
                        </entity-find></entity-options></drop-down>
                    </default-field></field>
                    <field name="locale"><default-field><text-line size="6"/></default-field></field>
                    <field name="submitButton"><default-field title="Add"><submit confirmation="Really Add?"/></default-field></field>
                </form-single>
            </container-dialog>
        </container>

        <form-list name="ListExampleContent" transition="updateExampleContent" list="exampleContentList">
            <auto-fields-service service-name="update#ExampleContent"/>
            <field name="exampleId"><default-field><hidden/></default-field></field>
            <field name="contentLocation"><default-field title="Location"><display/></default-field></field>
            <field name="download"><default-field><link url="downloadContent" parameter-map="[exampleId:exampleId, contentLocation:contentLocation]"/></default-field></field>
            <field name="purposeEnumId"><default-field title="Purpose">
                <drop-down><entity-options><entity-find entity-name="moqui.basic.Enumeration">
                    <econdition field-name="enumTypeId" value="ExampleContentPurpose"/>
                    <order-by field-name="description"/>
                </entity-find></entity-options></drop-down>
            </default-field></field>
            <field name="locale"><default-field><text-line size="6"/></default-field></field>
            <field name="submitButton"><default-field title="Update"><submit/></default-field></field>
            <field name="deleteLink">
                <default-field title=" ">
                    <!-- the parameters for this will be auto-mapped: exampleId, contentLocation -->
                    <link url="deleteExampleContent" text="Delete" confirmation="Really Delete?"/>
                </default-field>
            </field>
        </form-list>
    </widgets>
</screen>
