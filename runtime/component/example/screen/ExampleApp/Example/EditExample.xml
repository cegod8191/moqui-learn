<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-1.2.xsd"
        default-menu-title="Example" default-menu-index="1">

    <parameter name="exampleId"/>
    
    <transition name="createExample">
        <service-call name="org.moqui.example.ExampleServices.createExample"/>
        <default-response url="."/>
    </transition>
    <transition name="updateExample">
        <service-call name="org.moqui.example.ExampleServices.updateExample"/>
        <default-response url="."/>
    </transition>
    <transition name="getExampleTypeEnumList">
        <actions>
            <entity-find entity-name="moqui.basic.Enumeration" list="exampleTypeEnumList">
                <!-- for purposes of the example, get this as a parameter instead of the inline value: <econdition field-name="enumTypeId" value="EXAMPLE_TYPE"/> -->
                <econdition field-name="enumTypeId" from="enumTypeId"/>
                <order-by field-name="description"/>
            </entity-find>
            <script>ec.web.sendJsonResponse([exampleTypeEnumList:exampleTypeEnumList])</script>
        </actions>
        <default-response type="none"/>
    </transition>

    <actions>
        <entity-find-one entity-name="Example" value-field="fieldValues"/>
        <log message="EditExample exampleId [${exampleId}] fieldValues [${fieldValues}]"/>

        <entity-find-one entity-name="moqui.basic.StatusItem" value-field="currentStatus">
            <field-map field-name="statusId" from="fieldValues?.statusId"/>
        </entity-find-one>
    </actions>
    <widgets>
        <section name="create">
            <condition><compare field="fieldValues" operator="empty"/></condition>
            <actions>
                <!-- this is not constrained and sorted here because it is a view entity with those done internally -->
                <entity-find entity-name="ExampleStatusItem" list="exampleStatusItemList"/>
            </actions>
            <widgets>
                <!-- TODO: add some framework stuff to make this much easier to do: -->
                <render-mode><text type="html"><![CDATA[
    <script language="javascript">
    $(document).ready(function() {
        var list;
        $.ajax({ type: 'POST', url: 'EditExample/getExampleTypeEnumList', data: [{ name: 'enumTypeId', value: 'ExampleType' }],
                dataType: 'json' }).done( function(data) {
            list = data["exampleTypeEnumList"];
            if (list) {
                $('#CreateExample_exampleTypeEnumId').html(""); /* clear out the drop-down */
                $.each(list, function(key, value) {
                    $('#CreateExample_exampleTypeEnumId').append("<option value = '" + value["enumId"] + "'>" + value["description"] + "</option>");
                })
            };
        });
    })
    </script>
                ]]></text></render-mode>
                <form-single name="CreateExample" transition="createExample" focus-field="exampleName">
                    <auto-fields-service service-name="org.moqui.example.ExampleServices.create#Example"/>
                    <!-- for the auto-service, basically the entity and operation: <auto-fields-service service-name="create#Example"/> -->

                    <field name="exampleId">
                        <!-- the conditional-field.@condition attribute evaluates as a groovy boolean expression,
                         so this will see if the exampleId String is not null and length > 0 -->
                        <conditional-field condition="exampleId">
                            <display text="Not Found: [${exampleId}]" also-hidden="false"/>
                        </conditional-field>
                    </field>
                    <field name="exampleTypeEnumId">
                        <default-field title="Type" tooltip="Type of example">
                            <drop-down allow-empty="false">
                                <!-- This is obviously more efficient and easier done this way, but for purposes of an example this list is
                                    retrieved after load through an AJAX call to the getExampleTypeEnumList transition defined above.
                                <list-options list="exampleTypeEnumList" text="${description}"/> -->
                            </drop-down>
                        </default-field>
                    </field>
                    <field name="statusId">
                        <default-field title="Status" tooltip="The status of the example">
                            <drop-down allow-empty="false">
                                <list-options list="exampleStatusItemList" text="${description}"/>
                            </drop-down>
                        </default-field>
                    </field>
                    <field name="exampleName"><default-field tooltip="The name of the example"><text-line/></default-field></field>
                    <field name="description"><default-field tooltip="The description of the example"><text-line/></default-field></field>
                    <!-- uncomment to see example of a render-mode embedded in a field:
                    <field name="testRenderMode"><default-field>
                        <render-mode><text type="html"><![CDATA[<span><div>This is test HTML text.</div><div>This is another line.</div></span>]]></text></render-mode>
                    </default-field></field>
                    -->
                    <field name="submitButton"><default-field title="Create"><submit/></default-field></field>

                    <field-layout collapsible="true">
                        <field-ref name="exampleId"/>
                        <field-ref name="exampleTypeEnumId"/>
                        <field-ref name="statusId"/>
                        <field-ref name="exampleName"/>
                        <field-ref name="description"/>
                        <field-ref name="longDescription"/>
                        <field-ref name="comments"/>
                        <field-row>
                            <field-ref name="exampleSize"/>
                            <field-ref name="exampleDate"/>
                        </field-row>

                        <field-group title="Special Fields">
                            <field-ref name="auditedField"/>
                            <field-ref name="encryptedField"/>
                        </field-group>
                        <field-group title="Validated Fields">
                            <field-ref name="exampleEmail"/>
                            <field-ref name="exampleUrl"/>
                        </field-group>

                        <!-- <field-ref name="testRenderMode"/> -->
                        <field-ref name="submitButton"/>
                    </field-layout>
                </form-single>
            </widgets>
        </section>
        <section name="update">
            <condition><compare field="fieldValues" operator="not-empty"/></condition>
            <widgets>
                <form-single name="UpdateExample" extends="CreateExample" transition="updateExample">
                    <field name="exampleId">
                        <!-- this is in a conditional-field instead of default-field so that it can override the one in CreateExample -->
                        <conditional-field condition="exampleId">
                            <display/>
                        </conditional-field>
                    </field>
                    <field name="exampleTypeEnumId">
                        <default-field title="Type" tooltip="This is the type of example">
                            <drop-down allow-empty="false">
                                <entity-options text="${description}">
                                    <entity-find entity-name="moqui.basic.Enumeration">
                                        <econdition field-name="enumTypeId" value="ExampleType"/>
                                        <order-by field-name="description"/>
                                    </entity-find>
                                </entity-options>
                            </drop-down>
                        </default-field>
                    </field>
                    <field name="statusId">
                        <default-field title="Status" tooltip="The status of the example">
                            <drop-down allow-empty="false" current-description="${currentStatus?.description}">
                                <entity-options key="${toStatusId}" text="${transitionName} (${description})">
                                    <entity-find entity-name="StatusValidChangeToDetail">
                                        <econdition field-name="statusId" from="fieldValues.statusId"/>
                                    </entity-find>
                                </entity-options>
                            </drop-down>
                        </default-field>
                    </field>
                    <field name="submitButton"><default-field title="Update"><submit/></default-field></field>
                </form-single>
            </widgets>
        </section>
    </widgets>
</screen>
