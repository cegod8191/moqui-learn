<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-1.2.xsd"
        default-menu-title="SQL" begin-transaction="true">

    <transition name="run"><default-response url="."/></transition>

    <pre-actions>
        <script><![CDATA[
            import java.sql.Connection
            import java.sql.ResultSet
            import org.moqui.context.ExecutionContext

            ExecutionContext ec = context.ec

            rs = null
            columns = []
            records = []

            int limitInt = (limit?:"0") as int

            if (sql && groupName) {
                Connection con = ec.entity.getConnection(groupName)
                try {
                    if (sql.toUpperCase().startsWith("SELECT")) {
                        ps = con.prepareStatement(sql)
                        rs = ps.executeQuery()
                        if (rs != null) {
                            rsmd = rs.getMetaData()
                            columnCount = rsmd.getColumnCount()
                            for (i = 1; i <= columnCount; i++) columns.add(rsmd.getColumnName(i))

                            limitReached = false
                            while (rs.next()) {
                                if (limitInt > 0 && records.size() >= limitInt) {
                                    limitReached = true
                                    break
                                }
                                record = [];
                                for (i = 1; i <= columnCount; i++) record.add(rs.getObject(i))
                                records.add(record)
                            }
                            rs.close()

                            if (limitReached) {
                                ec.message.addMessage("Only showing first ${limit} rows.")
                            } else {
                                ec.message.addMessage("Showing all ${records.size()} results.")
                            }
                        }
                    } else {
                        ps = con.prepareStatement(sql)
                        int rowsAffected = ps.executeUpdate()
                        ec.message.addMessage("Query altered ${rowsAffected} rows.")
                    }
                } catch (Exception e) {
                    ec.message.addError(e.toString())
                }
            }
        ]]></script>
    </pre-actions>
    <widgets>
        <form-single name="SqlOptions" transition="run">
            <field name="groupName"><default-field>
                <drop-down allow-empty="false" no-current-selected-key="transactional">
                    <list-options list="ec.entity.getDatasourceGroupNames()"/></drop-down>
            </default-field></field>
            <field name="sql"><default-field title="SQL Statement"><text-area cols="120" rows="6"/></default-field></field>
            <field name="limit"><default-field><text-line size="5"/></default-field></field>
            <field name="submitButton"><default-field title="Run SQL"><submit/></default-field></field>
        </form-single>

        <label text="Query Results" type="h3"/>
        <render-mode><text type="html" template="true"><![CDATA[
            <div>
            <#if columns?has_content>
                <table cellspacing="0">
                    <tr class="header-row"><#list columns as column><td>${column}</td></#list></tr>
                    <#if records?has_content><#list records as record>
                        <tr><#list record as curField><td>${curField!"&nbsp;"}</td></#list></tr>
                    </#list></#if>
                </table>
            </#if>
            </div>
        ]]></text></render-mode>
    </widgets>
</screen>
